/**
 * 高速・厳格型安全統合型エクスポート
 * 
 * - 後方互換性削除
 * - 厳格な型制約
 * - パフォーマンス最適化
 * - 一元化されたインポート
 */

// ============================================================================
// 基本型システム（厳格制約）
// ============================================================================
export * from './base-types';

// ============================================================================
// API型システム（型安全レスポンス）
// ============================================================================
export * from './api-types';

// ============================================================================
// レスポンス型システム（厳格エラーハンドリング）
// ============================================================================
export * from './response-types';

// ============================================================================
// エンティティ型システム（readonly強制）
// ============================================================================
export * from './entity-types';

// ============================================================================
// バリデーション型システム（厳格スキーマ）
// ============================================================================
export * from './validation-types';

// ============================================================================
// UI型システム（コンポーネント型安全）
// ============================================================================
export * from './ui-types';

// ============================================================================
// 便利な型エイリアス
// ============================================================================

import type {
  Post,
  User,
  Comment,
  MediaFile,
  SiteSettings,
  ApiKey,
} from './entity-types';

import type {
  ApiResponse,
  PaginationMeta,
} from './response-types';

import type {
  PostRequestParams,
  UserRequestParams,
  MediaRequestParams,
} from './validation-types';

/**
 * よく使用される型の便利なエイリアス
 */
export type {
  // エンティティ型
  Post,
  User,
  Comment,
  MediaFile,
  SiteSettings,
  ApiKey,
  
  // レスポンス型
  ApiResponse,
  PaginationMeta,
  
  // リクエストパラメータ型
  PostRequestParams,
  UserRequestParams,
  MediaRequestParams,
};

// ============================================================================
// 型ユーティリティ
// ============================================================================

/**
 * エンティティからIDを除外した型
 */
export type WithoutId<T> = Omit<T, '_id' | 'id'>;

/**
 * エンティティから作成・更新日時を除外した型
 */
export type WithoutTimestamps<T> = Omit<T, 'createdAt' | 'updatedAt'>;

/**
 * エンティティから内部フィールドを除外した型（公開用）
 */
export type PublicEntity<T> = Omit<T, '_id' | 'passwordHash'>;

/**
 * 部分的に必須フィールドを持つ型
 */
export type PartialExcept<T, K extends keyof T> = Partial<T> & Pick<T, K>;

/**
 * 読み取り専用の深い型
 */
export type DeepReadonly<T> = {
  readonly [P in keyof T]: T[P] extends object ? DeepReadonly<T[P]> : T[P];
};
